syntax = "proto3";
package racing;

option go_package = "/racing";

import "google/protobuf/timestamp.proto";

service Racing {
  // ListRaces will return a collection of all races.
  rpc ListRaces(ListRacesRequest) returns (ListRacesResponse) {}
}

/* Enums */

// SortBy specifies the field to sort by
enum SortBy {
  SORT_BY_UNSPECIFIED = 0;
  SORT_BY_ADVERTISED_START_TIME = 1;
  SORT_BY_NAME = 2;
  SORT_BY_NUMBER = 3;
}

// SortOrder specifies the direction of sorting
enum SortOrder {
  SORT_ORDER_UNSPECIFIED = 0;
  SORT_ORDER_ASC = 1;
  SORT_ORDER_DESC = 2;
}

// RaceStatus represents whether a race is OPEN or CLOSED
enum RaceStatus {
  UNSPECIFIED = 0;
  OPEN = 1;
  CLOSED = 2;
}

/* Requests/Responses */

message ListRacesRequest {
  ListRacesRequestFilter filter = 1;
}

// Response to ListRaces call.
message ListRacesResponse {
  repeated Race races = 1;
}

// Filter for listing races.
message ListRacesRequestFilter {
  repeated int64 meeting_ids = 1;

  // visible_only determines whether to filter races based on visibility.
  // When set to true, only races with visible=true will be returned.
  // When set to false, only races with visibility=false will be returned.
  // When not provided, both visible and non-visible races will be included.
  optional bool visible_only = 2; 

  // sort_by specifies the field to sort by.
  // When not provided, defaults to SORT_BY_ADVERTISED_START_TIME.
  optional SortBy sort_by = 3;

  // sort_order specifies the direction of sorting.
  // When not provided, defaults to SORT_ORDER_ASC.
  optional SortOrder sort_order = 4;
}

/* Resources */

// A race resource.
message Race {
  // ID represents a unique identifier for the race.
  int64 id = 1;
  // MeetingID represents a unique identifier for the races meeting.
  int64 meeting_id = 2;
  // Name is the official name given to the race.
  string name = 3;
  // Number represents the number of the race.
  int64 number = 4;
  // Visible represents whether or not the race is visible.
  bool visible = 5;
  // AdvertisedStartTime is the time the race is advertised to run.
  google.protobuf.Timestamp advertised_start_time = 6;
  // Status represents whether the race is OPEN or CLOSED based on its advertised start time.
  // A race is CLOSED if its advertised_start_time is in the past.
  RaceStatus status = 7;
}

